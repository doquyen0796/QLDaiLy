using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;
using BUS;

namespace QLDaiLy
{
    public partial class frmDaiLy : DevExpress.XtraEditors.XtraForm
    {
        DAL.QLDaiLyEntities db = new DAL.QLDaiLyEntities();

        public frmDaiLy()
        {
            InitializeComponent();
        }


        private void navbarThem_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            frmThemDaiLy frm = new frmThemDaiLy();
            frm.XuLyThemDaiLy += frmDaiLy_Load;
            frm.ShowDialog();
        }


        private void FormLoad()
        {
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            DAL.QLDaiLyEntities dbContext = new DAL.QLDaiLyEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.DaiLies.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                daiLiesBindingSource.DataSource = dbContext.DaiLies.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());


            // Make the grid read-only.
            gridViewDaiLy.OptionsBehavior.Editable = false;
            // Prevent the focused cell from being highlighted.
            gridViewDaiLy.OptionsSelection.EnableAppearanceFocusedCell = false;
            // Draw a dotted focus rectangle around the entire row.
            gridViewDaiLy.FocusRectStyle = DevExpress.XtraGrid.Views.Grid.DrawFocusRectStyle.RowFocus;
        }


        private void frmDaiLy_Load(object sender, EventArgs e)
        {
            this.FormLoad();
        }


        private void txtTuKhoa_TextChanged(object sender, EventArgs e)
        {
            var tukhoa = txtTuKhoa.Text;
            var query = db.DaiLies.Where(dl => dl.TenDaiLy.ToLower().Contains(tukhoa.ToLower())).ToList();

            daiLiesBindingSource.DataSource = query;

            if (string.IsNullOrEmpty(txtTuKhoa.Text))
            {
                daiLiesBindingSource.DataSource = db.DaiLies.Local.ToBindingList();
            }
        }


        private void navbarSua_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            //  https://stackoverflow.com/questions/12762617/how-to-get-the-selected-row-values-of-devexpress-xtragrid

            frmSuaDaiLy frm = new frmSuaDaiLy();
            frm.txtMaDaiLy.Text = gridViewDaiLy.GetFocusedRowCellValue("MaDaiLy").ToString();
            frm.dtpNgayTiepNhan.EditValue = gridViewDaiLy.GetFocusedRowCellValue("NgayTiepNhan").ToString();
            frm.txtTenDaiLy.Text = gridViewDaiLy.GetFocusedRowCellValue("TenDaiLy").ToString();
            frm.cbLoaiDL.EditValue = gridViewDaiLy.GetFocusedRowCellValue("Loai").ToString();
            frm.cbQuan.EditValue = gridViewDaiLy.GetFocusedRowCellValue("Quan").ToString();
            frm.txtDiaChi.Text = gridViewDaiLy.GetFocusedRowCellValue("DiaChi").ToString();
            frm.txtEmail.Text = gridViewDaiLy.GetFocusedRowCellValue("Email").ToString();
            frm.XuLySuaDaiLy += frmDaiLy_Load;
            frm.ShowDialog();
        }


        private void navbarXoa_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            var flag = MessageBox.Show(string.Format("Bạn có chắc chắn muốn xóa đại lý {0} ?", gridViewDaiLy.GetFocusedRowCellValue("TenDaiLy").ToString()), "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Warning);
            if (flag == DialogResult.Yes)
            {
                BUS_DaiLy dl = new BUS_DaiLy();
                int madl = int.Parse(gridViewDaiLy.GetFocusedRowCellValue("MaDaiLy").ToString());
                var tb = dl.XoaDaiLy(madl);

                if (tb == true)
                {
                    MessageBox.Show("Bạn đã xóa đại lý thành công.", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    this.FormLoad();
                }
            }
            else
            {
                return;
            }
        }
    }
}